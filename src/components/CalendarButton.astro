---
import type { Match } from '@/types/types'
interface Props {
	nextMatch: Match
}

const { nextMatch } = Astro.props

const date = new Date(nextMatch.dateTime)

// Format the time as 'HH:MM'
const formattedStartTime = date.toTimeString().slice(0, 5)

// Add 2 hours to the time
date.setHours(date.getHours() + 2)
const formattedEndTime = date.toTimeString().slice(0, 5)

// Adjust the time to GMT-3 by subtracting 3 hours (in milliseconds)
date.setHours(date.getHours() - 3)

// Format the date as 'YYYY-MM-DD'
const formattedDate = date.toISOString().split('T')[0]

// console.log(formattedDate, formattedStartTime, formattedEndTime)
---

<section
	id="button-calendar-section"
	data-comp={nextMatch.tournament}
	data-date={formattedDate}
	data-versus={nextMatch.teams.filter((team) => team.name !== 'Argentina')[0]
		.name}
	data-start-time={formattedStartTime}
	data-end-time={formattedEndTime}
	class="w-full h-auto flex justify-center my-10"
>
	<button
		id="add-to-calendar"
		class:list={[
			'alto-button group',
			'text-textlight dark:text-textdark',
			'bg-accentlight/40 dark:bg-primarydark hover:bg-accentlight hover:dark:bg-primarydark/50',
			'w-auto md:w-fit px-6 py-4 rounded-lg',
			'hover:scale-95  transition-all',
			'active:scale-100',
			'outline-none',
		]}
		><h5
			class:list={[
				'text-textlight dark:text-textdark',
				'font-bold',
				'text-xl md:text-2xl',
				'group-hover:text-white transition-colors',
			]}
		>
			¡Agregar al calendario!
		</h5>
	</button>
</section>
<script is:inline>
	const btnCalendarSection = document.getElementById('button-calendar-section')

	const tournament = btnCalendarSection.getAttribute('data-comp')
	const startDate = btnCalendarSection.getAttribute('data-date')
	const versus = btnCalendarSection.getAttribute('data-versus')
	const startTime = btnCalendarSection.getAttribute('data-start-time')
	const endTime = btnCalendarSection.getAttribute('data-end-time')

	const config = {
		name: `⚽ Juega Argentina Vs ${versus}`,
		description: `¡Juega la Selección Argentina por una partido de ${tournament}`,
		startDate: startDate,
		startTime: startTime,
		endTime: '23:00',
		timeZone: 'currentBrowser',
		options: ['Google', 'Apple', 'Microsoft365', 'MicrosoftTeams'],
		trigger: 'click',
		iCalFileName: 'Reminder-Event',
	}

	// console.log(config)
	let status

	function loadStyle(src) {
		return new Promise((resolve, reject) => {
			const link = document.createElement('link')
			link.href = src
			link.rel = 'stylesheet'

			link.onload = () => resolve(link)
			link.onerror = () => reject(new Error(`Style load error for ${src}`))

			document.head.append(link)
		})
	}

	const button = document.querySelector('#add-to-calendar')
	const buttonText = button.querySelector('h5')
	const handleClick = async () => {
		if (status === 'loading') return
		// console.log(status)
		if (!status) {
			const text = buttonText.innerText
			buttonText.innerText = 'Cargando...'
			status = 'loading'
			await Promise.all([
				import('/js/add-to-calendar.js'),
				loadStyle('/css/add-to-calendar.css'),
			])
			status = 'loaded'
			buttonText.innerText = text
		}

		// config.startTime = button.getAttribute('data-date')

		window.atcb_action(config, button)
	}

	button?.addEventListener('click', handleClick)
	// button?.addEventListener('click', () => console))

	// });
</script>
