---
import DateCounter from '@components/DateCounter.astro'
import type { Match } from '../../types/types'

interface Props {
	nextMatch: Match
}

const { nextMatch } = Astro.props

const TIMESTAMP_DATE = nextMatch.timeStamp
---

<section
	id="countdown"
	data-date={TIMESTAMP_DATE}
	data-time="12:00:00 AM"
	class="w-full mb-5 gap-1 md:gap-2 flex items-center"
>
	<DateCounter
		id="days"
		attribute={{ 'data-days': '' }}
		label="días"
		shortLabel="días"
	/>
	<p class="text-secondarylight text-5xl md:text-7xl last:hidden text-center">
		:
	</p>
	<DateCounter
		id="hours"
		attribute={{ 'data-hours': '' }}
		label="horas"
		shortLabel="hrs"
	/>
	<p class="text-secondarylight text-5xl md:text-7xl last:hidden text-center">
		:
	</p>
	<DateCounter
		id="minutes"
		attribute={{ 'data-minutes': '' }}
		label="minutos"
		shortLabel="mins"
	/>
	<p class="text-secondarylight text-5xl md:text-7xl last:hidden text-center">
		:
	</p>
	<DateCounter
		id="seconds"
		attribute={{ 'data-seconds': '' }}
		label="segundos"
		shortLabel="segs"
	/>
</section>

<script>
	const SECONDS = 1000
	const MINUTES = SECONDS * 60
	const HOURS = MINUTES * 60
	const DAYS = HOURS * 24
	function init() {
		const $countdown = document.querySelector('#countdown')
		if (!$countdown) return

		const $days = $countdown.querySelector('[data-days] span')
		const $hours = $countdown.querySelector('[data-hours] span')
		const $minutes = $countdown.querySelector('[data-minutes] span')
		const $seconds = $countdown.querySelector('[data-seconds] span')

		const formatDate = (time: number) =>
			Math.floor(time).toString().padStart(2, '0')

		const timestamp = $countdown.getAttribute('data-date')
		// const time = $countdown.getAttribute('data-time')
		// console.log(time)

		if (!timestamp) return
		const targetDate = new Date(+timestamp).getTime()

		function updateCountdown() {
			const now = Date.now()
			const diff = targetDate - now
			// console.log(diff / DAYS)
			if ($days instanceof HTMLElement) {
				$days.textContent = formatDate(diff / DAYS)
			}
			if ($hours instanceof HTMLElement) {
				$hours.textContent = formatDate((diff % DAYS) / HOURS)
			}
			if ($minutes instanceof HTMLElement) {
				$minutes.textContent = formatDate((diff % HOURS) / MINUTES)
			}
			if ($seconds instanceof HTMLElement) {
				$seconds.textContent = formatDate((diff % MINUTES) / SECONDS)
			}
		}
		updateCountdown()
		setInterval(updateCountdown, 1000)
	}
	init()
</script>
